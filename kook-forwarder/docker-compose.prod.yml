# Docker Compose生产环境配置
# 使用方法: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  redis:
    # 生产环境：启用持久化
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes
    volumes:
      - redis_data:/data
      - ./redis/redis-prod.conf:/usr/local/etc/redis/redis.conf:ro
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    # 启用Redis密码（推荐）
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_redis_password}

  backend:
    # 生产环境：更严格的资源限制
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 1G
      # 生产环境：启用滚动更新
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    
    environment:
      # 生产环境变量
      - LOG_LEVEL=WARNING  # 减少日志量
      - DEBUG=false
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_redis_password}
      
      # 性能优化配置
      - IMAGE_PROCESS_POOL_SIZE=8  # 多进程图片处理
      - USE_SHARED_BROWSER=true    # 共享浏览器上下文
      - CACHE_ENABLED=true         # 启用Redis缓存
      
      # 监控和告警
      - HEALTH_CHECK_ENABLED=true
      - EMAIL_ALERT_ENABLED=${EMAIL_ALERT_ENABLED:-false}
      - SMTP_SERVER=${SMTP_SERVER:-}
      - EMAIL_FROM=${EMAIL_FROM:-}
      - EMAIL_TO=${EMAIL_TO:-}
    
    # 生产环境：添加监控标签
    labels:
      - "com.kook-forwarder.env=production"
      - "com.kook-forwarder.version=1.11.0"

  # 可选：添加Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: kook-forwarder-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - kook-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # 可选：添加监控服务（Prometheus）
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: kook-forwarder-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   networks:
  #     - kook-network

  # 可选：添加Grafana可视化
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: kook-forwarder-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
  #   networks:
  #     - kook-network

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  kook-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
