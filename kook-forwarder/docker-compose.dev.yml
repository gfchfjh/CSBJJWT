# Docker Compose开发环境配置
# 使用方法: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

version: '3.8'

services:
  redis:
    # 开发环境：使用默认配置，无持久化
    command: redis-server --appendonly no
    ports:
      - "6379:6379"  # 暴露端口方便本地调试

  backend:
    # 开发环境：热重载
    build:
      context: ./backend
      dockerfile: ../Dockerfile
      target: development  # 使用development stage（如果Dockerfile支持multi-stage）
    volumes:
      # 挂载源代码实现热重载
      - ./backend/app:/app/app:ro
    environment:
      - LOG_LEVEL=DEBUG  # 开发环境使用DEBUG日志
      - DEBUG=true
      - RELOAD=true      # 启用自动重载（uvicorn --reload）
    ports:
      # 暴露所有端口方便调试
      - "9527:9527"  # API
      - "9528:9528"  # 图床
      - "5678:5678"  # debugpy（Python调试器）
    
    # 开发环境：不限制资源
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G

  # 开发环境：添加数据库管理工具
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: kook-forwarder-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - kook-network

  # 开发环境：文件浏览器
  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: kook-forwarder-filebrowser
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - ./:/srv
    networks:
      - kook-network

networks:
  kook-network:
    driver: bridge
